/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { IIFtsoContract } from "./IIFtso";
import { IFtsoGenesisContract } from "./IFtsoGenesis";
import { IFtsoManagerGenesisContract } from "./IFtsoManagerGenesis";
import { IFtsoRegistryGenesisContract } from "./IFtsoRegistryGenesis";
import { IFtsoContract } from "./IFtso";
import { IFtsoManagerContract } from "./IFtsoManager";
import { IFtsoRegistryContract } from "./IFtsoRegistry";
import { IFtsoRewardManagerContract } from "./IFtsoRewardManager";
import { IPriceSubmitterContract } from "./IPriceSubmitter";
import { IVoterWhitelisterContract } from "./IVoterWhitelister";
import { IGovernanceVotePowerContract } from "./IGovernanceVotePower";
import { IAddressValidityVerificationContract } from "./IAddressValidityVerification";
import { IBalanceDecreasingTransactionVerificationContract } from "./IBalanceDecreasingTransactionVerification";
import { IConfirmedBlockHeightExistsVerificationContract } from "./IConfirmedBlockHeightExistsVerification";
import { IEVMTransactionVerificationContract } from "./IEVMTransactionVerification";
import { IPaymentVerificationContract } from "./IPaymentVerification";
import { IReferencedPaymentNonexistenceVerificationContract } from "./IReferencedPaymentNonexistenceVerification";
import { IStateConnectorContract } from "./IStateConnector";
import { IICleanableContract } from "./IICleanable";
import { IIGovernanceVotePowerContract } from "./IIGovernanceVotePower";
import { IIVPContractContract } from "./IIVPContract";
import { IIVPTokenContract } from "./IIVPToken";
import { IVPContractEventsContract } from "./IVPContractEvents";
import { IVPTokenContract } from "./IVPToken";
import { IWNatContract } from "./IWNat";
import { IFlareContractRegistryContract } from "./IFlareContractRegistry";
import { ERC20Contract } from "./ERC20";
import { IERC20MetadataContract } from "./IERC20Metadata";
import { IERC20Contract } from "./IERC20";
import { ERC20BalanceMonitorContract } from "./ERC20BalanceMonitor";
import { EthereumPaymentCollectorContract } from "./EthereumPaymentCollector";
import { FallbackContractContract } from "./FallbackContract";
import { FallbackWithEventContractContract } from "./FallbackWithEventContract";
import { MintableERC20Contract } from "./MintableERC20";
import { PaymentAggregationExampleContract } from "./PaymentAggregationExample";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "IIFtso"): IIFtsoContract;
      require(name: "IFtsoGenesis"): IFtsoGenesisContract;
      require(name: "IFtsoManagerGenesis"): IFtsoManagerGenesisContract;
      require(name: "IFtsoRegistryGenesis"): IFtsoRegistryGenesisContract;
      require(name: "IFtso"): IFtsoContract;
      require(name: "IFtsoManager"): IFtsoManagerContract;
      require(name: "IFtsoRegistry"): IFtsoRegistryContract;
      require(name: "IFtsoRewardManager"): IFtsoRewardManagerContract;
      require(name: "IPriceSubmitter"): IPriceSubmitterContract;
      require(name: "IVoterWhitelister"): IVoterWhitelisterContract;
      require(name: "IGovernanceVotePower"): IGovernanceVotePowerContract;
      require(
        name: "IAddressValidityVerification"
      ): IAddressValidityVerificationContract;
      require(
        name: "IBalanceDecreasingTransactionVerification"
      ): IBalanceDecreasingTransactionVerificationContract;
      require(
        name: "IConfirmedBlockHeightExistsVerification"
      ): IConfirmedBlockHeightExistsVerificationContract;
      require(
        name: "IEVMTransactionVerification"
      ): IEVMTransactionVerificationContract;
      require(name: "IPaymentVerification"): IPaymentVerificationContract;
      require(
        name: "IReferencedPaymentNonexistenceVerification"
      ): IReferencedPaymentNonexistenceVerificationContract;
      require(name: "IStateConnector"): IStateConnectorContract;
      require(name: "IICleanable"): IICleanableContract;
      require(name: "IIGovernanceVotePower"): IIGovernanceVotePowerContract;
      require(name: "IIVPContract"): IIVPContractContract;
      require(name: "IIVPToken"): IIVPTokenContract;
      require(name: "IVPContractEvents"): IVPContractEventsContract;
      require(name: "IVPToken"): IVPTokenContract;
      require(name: "IWNat"): IWNatContract;
      require(name: "IFlareContractRegistry"): IFlareContractRegistryContract;
      require(name: "ERC20"): ERC20Contract;
      require(name: "IERC20Metadata"): IERC20MetadataContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "ERC20BalanceMonitor"): ERC20BalanceMonitorContract;
      require(
        name: "EthereumPaymentCollector"
      ): EthereumPaymentCollectorContract;
      require(name: "FallbackContract"): FallbackContractContract;
      require(
        name: "FallbackWithEventContract"
      ): FallbackWithEventContractContract;
      require(name: "MintableERC20"): MintableERC20Contract;
      require(
        name: "PaymentAggregationExample"
      ): PaymentAggregationExampleContract;
    }
  }
}

export { IIFtsoContract, IIFtsoInstance } from "./IIFtso";
export { IFtsoGenesisContract, IFtsoGenesisInstance } from "./IFtsoGenesis";
export {
  IFtsoManagerGenesisContract,
  IFtsoManagerGenesisInstance,
} from "./IFtsoManagerGenesis";
export {
  IFtsoRegistryGenesisContract,
  IFtsoRegistryGenesisInstance,
} from "./IFtsoRegistryGenesis";
export { IFtsoContract, IFtsoInstance } from "./IFtso";
export { IFtsoManagerContract, IFtsoManagerInstance } from "./IFtsoManager";
export { IFtsoRegistryContract, IFtsoRegistryInstance } from "./IFtsoRegistry";
export {
  IFtsoRewardManagerContract,
  IFtsoRewardManagerInstance,
} from "./IFtsoRewardManager";
export {
  IPriceSubmitterContract,
  IPriceSubmitterInstance,
} from "./IPriceSubmitter";
export {
  IVoterWhitelisterContract,
  IVoterWhitelisterInstance,
} from "./IVoterWhitelister";
export {
  IGovernanceVotePowerContract,
  IGovernanceVotePowerInstance,
} from "./IGovernanceVotePower";
export {
  IAddressValidityVerificationContract,
  IAddressValidityVerificationInstance,
} from "./IAddressValidityVerification";
export {
  IBalanceDecreasingTransactionVerificationContract,
  IBalanceDecreasingTransactionVerificationInstance,
} from "./IBalanceDecreasingTransactionVerification";
export {
  IConfirmedBlockHeightExistsVerificationContract,
  IConfirmedBlockHeightExistsVerificationInstance,
} from "./IConfirmedBlockHeightExistsVerification";
export {
  IEVMTransactionVerificationContract,
  IEVMTransactionVerificationInstance,
} from "./IEVMTransactionVerification";
export {
  IPaymentVerificationContract,
  IPaymentVerificationInstance,
} from "./IPaymentVerification";
export {
  IReferencedPaymentNonexistenceVerificationContract,
  IReferencedPaymentNonexistenceVerificationInstance,
} from "./IReferencedPaymentNonexistenceVerification";
export {
  IStateConnectorContract,
  IStateConnectorInstance,
} from "./IStateConnector";
export { IICleanableContract, IICleanableInstance } from "./IICleanable";
export {
  IIGovernanceVotePowerContract,
  IIGovernanceVotePowerInstance,
} from "./IIGovernanceVotePower";
export { IIVPContractContract, IIVPContractInstance } from "./IIVPContract";
export { IIVPTokenContract, IIVPTokenInstance } from "./IIVPToken";
export {
  IVPContractEventsContract,
  IVPContractEventsInstance,
} from "./IVPContractEvents";
export { IVPTokenContract, IVPTokenInstance } from "./IVPToken";
export { IWNatContract, IWNatInstance } from "./IWNat";
export {
  IFlareContractRegistryContract,
  IFlareContractRegistryInstance,
} from "./IFlareContractRegistry";
export { ERC20Contract, ERC20Instance } from "./ERC20";
export {
  IERC20MetadataContract,
  IERC20MetadataInstance,
} from "./IERC20Metadata";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export {
  ERC20BalanceMonitorContract,
  ERC20BalanceMonitorInstance,
} from "./ERC20BalanceMonitor";
export {
  EthereumPaymentCollectorContract,
  EthereumPaymentCollectorInstance,
} from "./EthereumPaymentCollector";
export {
  FallbackContractContract,
  FallbackContractInstance,
} from "./FallbackContract";
export {
  FallbackWithEventContractContract,
  FallbackWithEventContractInstance,
} from "./FallbackWithEventContract";
export { MintableERC20Contract, MintableERC20Instance } from "./MintableERC20";
export {
  PaymentAggregationExampleContract,
  PaymentAggregationExampleInstance,
} from "./PaymentAggregationExample";
